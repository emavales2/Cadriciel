
--------- * STATE OF * THINGS ---------

--- USER/ETUDIANT ---

1) Login - DONE     2pts
2) Logout - DONE
3) Permissions - DONE
------------------------------------------------
4) Register new account
    Data into users table - DONE        All this was done so no points
    Data into students table - DONE
5) Modifier la compte 
    Data etudiants + table - DONE
    Data users + table - DONE
6) Effacer la compte utilisateur
    Data etudiants + table - DONE
    Data users + table - DONE


--- ARTICLE ---

7) Display all articles - DONE
8) Post new article - DONE          2 pts CRUD
9) Modify article - DONE            2 pts new table
10) Delete article - DONE
------------------------------------------------   


--- FALTA ---

1) Verfier validation
2) Bilingual
3) CSS
5) Page partage fichiers



to validate , command line:
php artisan make:request ArticleRequest

pero con el modelo que queremos

<td>{{ $article->articletHasUser->email }}</td>  

<a class="nav-link text-light text-decoration-none fw-light hover_blue" href="{{ route('etudiant.show', $etudiant->id)}}">mon profil</a>
<a href="{{ route('blog.show', $blog->id)}}">{{ $blog->title }}
<a class="navbar-brand" href="#">@lang('lang.text_hello') {{Auth::user() ? Auth::user()->name : "Guest"}}</a>

htaccess exercice 1 mettre dans la racine du projet (pour vue en el otro proyecto)



ok, so originally, i had 2 main tables: students and cities. the "id" column in the cities table was in the students table as a FK ("ville_id"). Now, because of needing a login/logout authorization component, I need to link the native User model/table with the students table so authorization goes through Users. How do i do this? 

---- . ------

(old migration for users table)

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class CreateUsersTable extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::create('users', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('email')->unique();
            $table->timestamp('email_verified_at')->nullable();
            $table->string('password');
            $table->rememberToken();
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists('users');
    }
}

----- * -----

public function up()
    {
        Schema::create('users', function (Blueprint $table) {

            $table->engine = 'InnoDB';

            // Seront ammenés en tant que FKs
            
            $table->bigInteger('id')->unsigned();           
            $table->string('name', 45);
            $table->string('email', 45)->unique()->nullable($value = false);

            // Unique à la table users
            $table->timestamp('email_verified_at')->nullable();
            $table->string('password', 50);
            $table->rememberToken();
            $table->timestamps();

            // Contrainte pour la FK
            $table->foreign('id')->references('id')->on('maisonn_etudiants');
            $table->foreign('name')->references('name')->on('maisonn_etudiants');
            $table->foreign('email')->references('email')->on('maisonn_etudiants');
            
        });
    }

    -----


    Schema::create('maisonn_etudiants', function (Blueprint $table) {

            $table->engine = 'InnoDB';
            
            $table->increments('id');
            $table->string('name', 45);
            $table->string('address', 100);
            $table->string('phone', 25);
            $table->string('email', 45)->unique()->nullable($value = false);
            $table->date('birthday');
            $table->unsignedInteger('ville_id');

            // Contrainte pour la FK
            $table->foreign('ville_id')->references('id')->on('villes');
            $table->foreign('user_id')->references('id')->on('users');
        });




        ----- etudiants -----

        <?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class CreateMaisonnEtudiantsTable extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::create('maisonn_etudiants', function (Blueprint $table) {

            $table->integer('user_id')->primary();
            $table->string('name');
            $table->string('address');
            $table->string('phone');
            $table->date('birthday');
            $table->timestamps();

            // FK
            $table->integer('ville_id');
            $table->foreign('ville_id')->references('id')->on('maisonn_villes');
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists('maisonn_etudiants');
    }
}



---- users ----

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class CreateUsersTable extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::create('users', function (Blueprint $table) {
            
            $table->id();
            $table->string('email')->unique();
            $table->string('password');
            $table->string('temp_password')->nullable();
            $table->rememberToken();
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists('users');
    }
}



---- articles ----

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class CreateMaisonnArticlesTable extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::create('maisonn_articles', function (Blueprint $table) {
            
            $table->id();
            $table->string('title');
            $table->string('art_body');
            $table->timestamps();

            // FK
            $table->unsignedBigInteger('user_id');
            $table->foreign('user_id')->references('id')->on('users');
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists('maisonn_articles');
    }
}





--- villes ---

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class CreateMaisonnVillesTable extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::create('maisonn_villes', function (Blueprint $table) {

            $table->engine = 'InnoDB';
            
            // $table->increments('id');
            $table->id();
            $table->string('name')->unique()->nullable($value = false);
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists('villes');
    }
}



---- ANTES CREATE.BLADE EN FOLDER AUTH ---

@extends('layouts.app')
@section('content')

    <main class="login-form">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-md-4 pt-4">
                    <div class="card">
                        <h3 class="card-header text-center">
                        Enregistrer
                        </h3>

                        <div class="card-body">
                            @if(session('success'))
                            <div class="alert alert-success">
                            {{session('success')}}
                            </div>
                            @endif

                            <form action="{{route('user.store')}}" method="post">
                                @csrf
                                <div class="form-group mb-3">
                                    <input type="text" placeholder="Name" class="form-control" name="name" value="{{old('name')}}">
                                    
                                    @if ($errors->has('name'))
                                    <div class="text-danger mt-2">
                                        {{$errors->first('name')}}
                                    </div>
                                    @endif
                                </div>

                                <div class="form-group mb-3">
                                    <input type="email" placeholder="email" class="form-control" name="email" value="{{old('email')}}">
                                    
                                    @if ($errors->has('email'))
                                    <div class="text-danger mt-2">
                                        {{$errors->first('email')}}
                                    </div>
                                    @endif
                                </div>

                                <div class="form-group mb-3">
                                    <input type="password" placeholder="password" class="form-control" name="password">
                                
                                    @if ($errors->has('password'))
                                    <div class="text-danger mt-2">
                                        {{$errors->first('password')}}
                                    </div>
                                    @endif
                                </div>

                                <div class="d-grid mx-auto">
                                    <input type="submit" value="Sauvegarder" class="btn btn-dark btn-block">
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>
@endsection




SELECT * FROM maisonneuve.maisonn_etudiants;
SELECT * FROM maisonneuve.users;

drop database maisonneuve;
create database maisonneuve;

SHOW OPEN TABLES LIKE 'maisonn_etudiants';
SHOW OPEN TABLES FROM maisonneuve;
SHOW TABLE STATUS LIKE 'maisonn_etudiants';

SELECT * FROM maisonneuve.maisonn_etudiants;
SELECT * FROM maisonneuve.maisonn_articles;
SELECT * FROM maisonneuve.users;
SELECT * FROM maisonneuve.maisonn_villes;

DROP table maisonneuve.maisonn_etudiants;

REPAIR TABLE maisonn_etudiants;

SELECT * FROM my_blog.users;

SHOW PROCESSLIST;
SHOW GRANTS FOR 'root'@'localhost';